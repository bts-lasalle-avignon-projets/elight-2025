class Historique
!!!129066.cpp!!!	Historique(inout parent : QWidget = nullptr)
    qDebug() << Q_FUNC_INFO << this;

    setWindowTitle(QString(TITRE_FENETRE_HISTORIQUE));

    titreHistorique =
      new QLabel("Historique de la consommation d'Ã©nergie", this);
    QLabel*      labelLogoeLight = new QLabel(this);
    QPixmap      logoeLight(QString(CHEMIN_RESSOURCE) + "logo-elight.png");
    QPushButton* boutonFermeture = new QPushButton("Fermer", this);
    listeHistorique              = new QListWidget(this);

    QVBoxLayout* layout = new QVBoxLayout(this);
    QHBoxLayout* entete = new QHBoxLayout;

    labelLogoeLight->setPixmap(logoeLight);
    entete->addWidget(labelLogoeLight);
    entete->addWidget(titreHistorique, Qt::AlignBaseline);

    layout->addLayout(entete);
    layout->addWidget(listeHistorique);
    layout->addWidget(boutonFermeture);

    if(baseDeDonnees->connecter())
    {
        chargerHistoriqueDepuisBDD();
    }

    connect(boutonFermeture,
            &QPushButton::clicked,
            this,
            &Historique::fermerFenetre);

    this->setStyleSheet("background-color: #FFFFFF;");
    titreHistorique->setStyleSheet("font-weight: 900; font-size: 50px;");
#ifdef RASPBERRY_PI
    setWindowFlags(Qt::FramelessWindowHint | Qt::Dialog);
#else
    setWindowFlags(Qt::Dialog);
#endif

    setWindowModality(Qt::WindowModal);
!!!129194.cpp!!!	~Historique()
    CommunicationBaseDeDonnees::detruireInstance();
    qDebug() << Q_FUNC_INFO << this;
!!!129322.cpp!!!	showEvent(inout event : QShowEvent) : void
    Q_UNUSED(event)
    qDebug() << Q_FUNC_INFO << this;
!!!129450.cpp!!!	initialiserTable() : void
    QStringList nomColonnesTable;
    nomColonnesTable << "Salle"
                     << "Consommation (kWh)"
                     << "Horodatage";
    table->setColumnCount(nomColonnesTable.count());
    table->setHorizontalHeaderLabels(nomColonnesTable);

#ifdef DEMO_HISTORIQUE
    table->setRowCount(5);

    table->setItem(0, 0, new QTableWidgetItem("B20"));
    table->setItem(0, 1, new QTableWidgetItem("150 kWh"));
    table->setItem(0,
                   2,
                   new QTableWidgetItem(
                     QDateTime::currentDateTime().toString("dd/MM/yy HH:mm")));

    table->setItem(1, 0, new QTableWidgetItem("B21"));
    table->setItem(1, 1, new QTableWidgetItem("100 kWh"));
    table->setItem(1,
                   2,
                   new QTableWidgetItem(
                     QDateTime::currentDateTime().toString("dd/MM/yy HH:mm")));

    table->setItem(2, 0, new QTableWidgetItem("B22"));
    table->setItem(2, 1, new QTableWidgetItem("120 kWh"));
    table->setItem(2,
                   2,
                   new QTableWidgetItem(
                     QDateTime::currentDateTime().toString("dd/MM/yy HH:mm")));

    table->setItem(3, 0, new QTableWidgetItem("B23"));
    table->setItem(3, 1, new QTableWidgetItem("130 kWh"));
    table->setItem(3,
                   2,
                   new QTableWidgetItem(
                     QDateTime::currentDateTime().toString("dd/MM/yy HH:mm")));

    table->setItem(4, 0, new QTableWidgetItem("B24"));
    table->setItem(4, 1, new QTableWidgetItem("110 kWh"));
    table->setItem(4,
                   2,
                   new QTableWidgetItem(
                     QDateTime::currentDateTime().toString("dd/MM/yy HH:mm")));
#endif

    QHeaderView* headerView = table->horizontalHeader();
    headerView->setSectionResizeMode(QHeaderView::Stretch);

    table->resizeColumnsToContents();
    table->resizeRowsToContents();
!!!132354.cpp!!!	chargerHistoriqueDepuisBDD() : void
    qDebug() << Q_FUNC_INFO;
    QSqlQuery requete;
    requete.prepare(
      "SELECT id_segment, consommation, horodatage_releve FROM "
      "historique_consommation_segment ORDER BY horodatage_releve DESC");

    if(!requete.exec())
    {
        qDebug() << Q_FUNC_INFO << "Erreur SQL" << requete.lastError().text();
        return;
    }

    listeHistorique->clear();

    while(requete.next())
    {
        int     idSegment    = requete.value(ID_SEGMENT).toInt();
        float   consommation = requete.value(CONSOMMATION).toFloat();
        QString horodatage   = requete.value(HORODATAGE_RELEVE).toString();

        QString ligne = QString("Segment #%1 - %2 kWh - %3")
                          .arg(idSegment)
                          .arg(consommation, 0, 'f', 2)
                          .arg(horodatage);

        listeHistorique->addItem(ligne);
    }
!!!129578.cpp!!!	fermerFenetre() : void
    this->close();
